version: 0.2

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo Installing jq...
      - apt-get update && apt-get install -y jq

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - echo Logging in to Docker Hub...
      - |
        creds=$(aws secretsmanager get-secret-value --secret-id dockerhubsecret --region $AWS_DEFAULT_REGION --query SecretString --output text)
        username=$(echo $creds | jq -r .username)
        token=$(echo $creds | jq -r .token)
        echo "$token" | docker login -u "$username" --password-stdin

  build:
    commands:
      - echo Build started on `date`
      - docker build --platform=linux/amd64 -t $IMAGE_REPO_NAME:$IMAGE_TAG -f DockerfileProd .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
